package com.sillylife.realchat.views.activitiesimport android.content.Intentimport android.os.Bundleimport android.widget.Toastimport androidx.lifecycle.ViewModelProvidersimport com.firebase.ui.auth.AuthUIimport com.firebase.ui.auth.IdpResponseimport com.google.firebase.FirebaseAppimport com.google.firebase.auth.FirebaseAuthimport com.google.firebase.database.DataSnapshotimport com.google.firebase.database.DatabaseErrorimport com.sillylife.realchat.Rimport com.sillylife.realchat.managers.ContactManagerimport com.sillylife.realchat.models.UserProfileimport com.sillylife.realchat.service.network.UpdateDatabaseimport com.sillylife.realchat.util.FragmentHelperimport com.sillylife.realchat.views.fragments.HomeFragmentimport com.sillylife.realchat.views.module.MainActivityModuleimport com.sillylife.realchat.views.viewmodel.MainActivityViewModelimport com.sillylife.realchat.views.viewmodelfactory.ActivityViewModelFactoryimport java.util.*class MainActivity : BaseActivity(), MainActivityModule.IModuleListener {    override fun onGetMeResponseSuccess(dataSnapshot: DataSnapshot) {        if (!dataSnapshot.exists() && dataSnapshot.getValue(UserProfile::class.java) == null) {            val user = FirebaseAuth.getInstance().currentUser            if (user != null && user.phoneNumber != null) {                val username = ContactManager.getContactNameByNumber(user.phoneNumber!!, applicationContext)                UpdateDatabase.getInstance().updateUserProfile(UserProfile(user.phoneNumber, username, "haha", true, user.uid))            }        }    }    override fun onGetMeResponseFailure(databaseError: DatabaseError) {    }    private var mAuth: FirebaseAuth? = null    private lateinit var viewModel: MainActivityViewModel    private val RC_SIGN_IN = 9001    override fun onCreate(savedInstanceState: Bundle?) {        FirebaseApp.initializeApp(this)        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_main)        //viewModel = ViewModelProviders.of(this, ActivityViewModelFactory(this)).get(MainActivityViewModel::class.java)        setupFirebaseAuth()    }    private fun setupFirebaseAuth() {        mAuth = FirebaseAuth.getInstance()        if (mAuth?.uid != null) {            showHome()        } else {            val providers = Arrays.asList<AuthUI.IdpConfig>(AuthUI.IdpConfig.PhoneBuilder().build())            startActivityForResult(                    AuthUI.getInstance()                            .createSignInIntentBuilder()                            .setAvailableProviders(providers)                            .build(), RC_SIGN_IN)        }    }    private fun showHome() {        FragmentHelper.replace(R.id.container, supportFragmentManager!!, HomeFragment.newInstance("",""), HomeFragment.TAG)    }    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {        super.onActivityResult(requestCode, resultCode, data)        if (requestCode == RC_SIGN_IN) {            val response = IdpResponse.fromResultIntent(data)            if (resultCode == RESULT_OK) {                val user = FirebaseAuth.getInstance().currentUser                if (user != null && user.phoneNumber != null) {                    viewModel.getMe()                    showHome()                    Toast.makeText(this, "" + user.phoneNumber!!, Toast.LENGTH_SHORT).show()                }            } else {                // Sign in failed. If response is null the user canceled the                // sign-in flow using the back button. Otherwise check                // response.getError().getErrorCode() and handle the error.                // ...            }        }    }    fun onSignout() {        AuthUI.getInstance()                .signOut(this)                .addOnCompleteListener { setupFirebaseAuth() }    }}