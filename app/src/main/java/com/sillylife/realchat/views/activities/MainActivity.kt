package com.sillylife.realchat.views.activitiesimport android.content.Intentimport android.os.Bundleimport android.widget.Toastimport androidx.lifecycle.ViewModelProvidersimport androidx.viewpager.widget.ViewPagerimport com.firebase.ui.auth.AuthUIimport com.firebase.ui.auth.IdpResponseimport com.google.android.material.bottomnavigation.BottomNavigationViewimport com.google.firebase.FirebaseAppimport com.google.firebase.auth.FirebaseAuthimport com.google.firebase.database.DataSnapshotimport com.google.firebase.database.DatabaseErrorimport com.sillylife.realchat.Rimport com.sillylife.realchat.constants.DefaultFragmentimport com.sillylife.realchat.models.Userimport com.sillylife.realchat.service.network.UpdateDatabaseimport com.sillylife.realchat.views.adapters.CommonViewStatePagerAdapterimport com.sillylife.realchat.views.fragments.ContainerFragmentimport com.sillylife.realchat.views.fragments.HomeFragmentimport com.sillylife.realchat.views.module.MainActivityModuleimport com.sillylife.realchat.views.viewmodel.MainActivityViewModelimport com.sillylife.realchat.views.viewmodelfactory.ActivityViewModelFactoryimport kotlinx.android.synthetic.main.activity_main.*import java.util.*class MainActivity : BaseActivity(), MainActivityModule.IModuleListener {    override fun onGetMeResponseSuccess(dataSnapshot: DataSnapshot) {        if (!dataSnapshot.exists() && dataSnapshot.getValue(User::class.java) == null) {            val user = FirebaseAuth.getInstance().currentUser            if (user != null && user.phoneNumber != null) {                //val username = ContactManager.getContactNameByNumber(user.phoneNumber!!, applicationContext)                UpdateDatabase.getInstance().updateUserProfile(User(user.phoneNumber, "Shubh", "haha", true, user.uid))            }        }    }    override fun onGetMeResponseFailure(databaseError: DatabaseError) {    }    private var mAuth: FirebaseAuth? = null    private lateinit var viewModel: MainActivityViewModel    private val RC_SIGN_IN = 9001    var homeFragment: ContainerFragment? = null    var groupFragment: ContainerFragment? = null    var profileFragment: ContainerFragment? = null    override fun onCreate(savedInstanceState: Bundle?) {        FirebaseApp.initializeApp(this)        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_main)        viewModel = ViewModelProviders.of(this, ActivityViewModelFactory(this)).get(MainActivityViewModel::class.java)        setupFirebaseAuth()        setFragments()        val viewPagerAdapter = CommonViewStatePagerAdapter(supportFragmentManager)        viewPagerAdapter.addItem(homeFragment!!, HomeFragment.TAG)        //viewPagerAdapter.addItem(homeFragment!!, HomeFragment.TAG)        //viewPagerAdapter.addItem(homeFragment!!, HomeFragment.TAG)        viewpager.adapter = viewPagerAdapter        viewpager.offscreenPageLimit = 2        setClickListenerOnBottomView()        setSwipeListenerOnViewPager()    }    private fun setClickListenerOnBottomView() {        val mOnNavigationItemSelectedListener = BottomNavigationView.OnNavigationItemSelectedListener { item ->            val commonViewStatePagerAdapter = viewpager.adapter as CommonViewStatePagerAdapter            val position = commonViewStatePagerAdapter.getPositionByTitle(item.title.toString())            when (item.itemId) {                R.id.nav_home -> {                    viewpager.setCurrentItem(position, true)                    return@OnNavigationItemSelectedListener true                }                R.id.nav_group -> {                    viewpager.setCurrentItem(position, true)                    return@OnNavigationItemSelectedListener true                }                R.id.nav_profile -> {                    viewpager.setCurrentItem(position, true)                    return@OnNavigationItemSelectedListener true                }            }            false        }        navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener)    }    private fun setSwipeListenerOnViewPager() {        viewpager.addOnPageChangeListener(object : ViewPager.OnPageChangeListener {            override fun onPageScrolled(position: Int, positionOffset: Float, positionOffsetPixels: Int) {            }            override fun onPageSelected(position: Int) {                navigation.menu.getItem(position).isChecked = true            }            override fun onPageScrollStateChanged(state: Int) {            }        })    }    private fun setFragments() {        homeFragment = ContainerFragment.newInstance(DefaultFragment.HOME)        groupFragment = ContainerFragment.newInstance(DefaultFragment.GROUP)        profileFragment = ContainerFragment.newInstance(DefaultFragment.PROFILE)    }    private fun setupFirebaseAuth() {        mAuth = FirebaseAuth.getInstance()        if (mAuth?.uid != null) {            //showHome()        } else {            val providers = Arrays.asList<AuthUI.IdpConfig>(AuthUI.IdpConfig.PhoneBuilder().build())            startActivityForResult(                    AuthUI.getInstance()                            .createSignInIntentBuilder()                            .setAvailableProviders(providers)                            .build(), RC_SIGN_IN)        }    }    private fun showHome() {        replaceFragment(HomeFragment.newInstance(), HomeFragment.TAG)    }    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {        super.onActivityResult(requestCode, resultCode, data)        if (requestCode == RC_SIGN_IN) {            val response = IdpResponse.fromResultIntent(data)            if (resultCode == RESULT_OK) {                val user = FirebaseAuth.getInstance().currentUser                if (user != null && user.phoneNumber != null) {                    viewModel.getMe()                    showHome()                    Toast.makeText(this, "" + user.phoneNumber!!, Toast.LENGTH_SHORT).show()                }            } else {                // Sign in failed. If response is null the user canceled the                // sign-in flow using the back button. Otherwise check                // response.getError().getErrorCode() and handle the error.                // ...            }        }    }    fun onSignout() {        AuthUI.getInstance()                .signOut(this)                .addOnCompleteListener { setupFirebaseAuth() }    }}